{"mappings":"AAAA,EAAkB,AAAlB,gBAAkB;AAClB,EAAiE,AAAjE,+DAAiE;AACjE,EAAmC,AAAnC,iCAAmC;AAEnC,EAAwB,AAAxB,sBAAwB;AACxB,EAA8B,AAA9B,4BAA8B;AAE9B,EAAqD,AAArD,mDAAqD;AAErD,EAAqC,AAArC,mCAAqC;AACrC,EAAwC,AAAxC,sCAAwC;AAExC,EAAsE,AAAtE,oEAAsE;AAEtE,EAA+C,AAA/C,6CAA+C;AAE/C,EAAmC,AAAnC,iCAAmC;AACnC,EAAmB,AAAnB,iBAAmB;AACnB,EAAkB,AAAlB,gBAAkB;AAClB,EAAiB,AAAjB,eAAiB;AACjB,EAAqB,AAArB,mBAAqB;AAErB,EAA+C,AAA/C,6CAA+C;AAE/C,EAAwC,AAAxC,sCAAwC;AACxC,EAA6E,AAA7E,2EAA6E;AAC7E,EAAqC,AAArC,mCAAqC;AACrC,EAAyB,AAAzB,uBAAyB;AACzB,EAAiE,AAAjE,+DAAiE;AACjE,EAAK,AAAL,GAAK;AAEL,EAAkC,AAAlC,gCAAkC;AAClC,EAAyB,AAAzB,uBAAyB;AAEzB,EAAoB,AAApB,kBAAoB;AACpB,EAA+C,AAA/C,6CAA+C;AAE/C,EAAyC,AAAzC,uCAAyC;AACzC,EAA0B,AAA1B,wBAA0B;AAE1B,EAAyC,AAAzC,uCAAyC;AAEzC,EAAqC,AAArC,mCAAqC;AACrC,EAAuB,AAAvB,qBAAuB;AACvB,EAA+B,AAA/B,6BAA+B;AAC/B,EAA8B,AAA9B,4BAA8B;AAC9B,EAAgC,AAAhC,8BAAgC;AAEhC,EAAoD,AAApD,kDAAoD;AACpD,EAAyC,AAAzC,uCAAyC;AACzC,EAA+D,AAA/D,6DAA+D;AAC/D,EAAS,AAAT,OAAS;AAET,EAAqD,AAArD,mDAAqD;AACrD,EAAuE,AAAvE,qEAAuE;AACvE,EAAS,AAAT,OAAS;AAET,EAAe,AAAf,aAAe;AACf,EAAqB,AAArB,mBAAqB;AACrB,EAAgB,AAAhB,cAAgB;AAChB,EAAsB,AAAtB,oBAAsB;AACtB,EAAyB,AAAzB,uBAAyB;AACzB,EAAS,AAAT,OAAS;AACT,EAAQ,AAAR,MAAQ;AAER,EAAsC,AAAtC,oCAAsC;AACtC,EAAuC,AAAvC,qCAAuC;AACvC,EAA8B,AAA9B,4BAA8B;AAC9B,EAA8C,AAA9C,4CAA8C;AAE9C,EAAuC,AAAvC,qCAAuC;AAEvC,EAAiE,AAAjE,+DAAiE;AAEjE,KAAK,CAAC,KAAK,GAAG,CAAC;IACX,IAAI,EAAE,CAAC;QACH,CAAC;YAAA,OAAO,EAAE,CAAO;YAAE,QAAQ,EAAE,CAAC;QAAA,CAAC;QAC/B,CAAC;YAAA,OAAO,EAAE,CAAO;YAAE,QAAQ,EAAE,CAAC;QAAA,CAAC;IACnC,CAAC;IACD,IAAI,EAAE,CAAC;QAAA,QAAQ,EAAE,IAAI;IAAA,CAAC;AAC1B,CAAC;AAED,KAAK,CAAC,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;AAAA,CAAC,EAAE,KAAK;AAC3C,KAAK,CAAC,eAAe,GAAG,SAAS,CAAC,KAAK;AAEvC,KAAK,CAAC,IAAI,CAAC,QAAQ,GAAG,KAAK;AAC3B,OAAO,CAAC,GAAG,CAAC,WAAW;AACvB,OAAO,CAAC,GAAG,CAAC,eAAe","sources":["script.js"],"sourcesContent":["//Importing module\r\n// import { addToCart, tq ,totalPrice } from \"./shoppingCart.js\";\r\n// console.log('Importing module');\r\n\r\n// addToCart('bread',5);\r\n// console.log(totalPrice,tq);\r\n\r\n// import * as ShoppingCart from './shoppingCart.js';\r\n\r\n// ShoppingCart.addToCart('bread',5);\r\n// console.log(ShoppingCart.totalPrice);\r\n\r\n// import add, { addToCart, tq ,totalPrice } from './shoppingCart.js';\r\n\r\n// import add, {cart} from './shoppingCart.js';\r\n\r\n// console.log('Importing module');\r\n// add('pizza',10);\r\n// add('pork',20);\r\n// add('fish',5);\r\n// console.log(cart);\r\n\r\n// //NOTE: Class 273: Top-level await (ES2022).\r\n\r\n// const getLastPost = async function(){\r\n//     const res = await fetch('https://jsonplaceholder.typicode.com/posts');\r\n//     const data = await res.json();\r\n//     console.log(data);\r\n//     return {title: data.at(-1).title, text: data.at(-1).body};\r\n// };\r\n\r\n// const lastPost = getLastPost();\r\n// console.log(lastPost);\r\n\r\n// //Not very clean.\r\n// // lastPost.then(last => console.log(last));\r\n\r\n// const lastPost2 = await getLastPost();\r\n// console.log(lastPost2);\r\n\r\n// //NOTE: Class 274: The Module Pattern.\r\n\r\n// const ShoppingCart2 = (function(){\r\n//     const cart = [];\r\n//     const shippingCost = 10;\r\n//     const totalPrice = 237;\r\n//     const totalQuantity = 23;\r\n\r\n//     const addToCart = function(product,quantity){\r\n//         cart.push({product,quantity});\r\n//         console.log(`${product} ${quantity} added to cart`);\r\n//     };\r\n\r\n//     const orderStock = function(product,quantity){\r\n//         console.log(`${product} ${quantity} ordered from supplier`);\r\n//     };\r\n\r\n//     return {\r\n//         addToCart,\r\n//         cart,\r\n//         totalPrice,\r\n//         totalQuantity,\r\n//     };\r\n// })();\r\n\r\n// ShoppingCart2.addToCart('Apple',4);\r\n// ShoppingCart2.addToCart('Pizzas',3);\r\n// console.log(ShoppingCart2);\r\n// // console.log(ShoppingCart2.shippingCost);\r\n\r\n//NOTE: Class 277: Introduction to NPM.\r\n\r\n// import cloneDeep from './node_modules/lodash-es/cloneDeep.js';\r\n\r\nconst state = {\r\n    cart: [\r\n        {product: 'bread', quantity: 5},\r\n        {product: 'pizza', quantity: 4},\r\n    ],\r\n    user: {loggedIn: true},\r\n};\r\n\r\nconst staateClone = Object.assign({}, state);\r\nconst stateDeeapClone = cloneDeep(state);\r\n\r\nstate.user.loggedIn = false;\r\nconsole.log(staateClone);\r\nconsole.log(stateDeeapClone);"],"names":[],"version":3,"file":"index.810bb8fa.js.map","sourceRoot":"/__parcel_source_root/"}